# ********RoostGPT********

# Test generated by RoostGPT for test karate-vtal-appointment using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /appointmentConfirmation_post for http method type POST 
# RoostTestHash=cff6ff5663
# 
# 

# ********RoostGPT********
Feature: Appointment Confirmation API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario: Successful appointment confirmation
    Given path '/appointmentConfirmation'
    And header Authorization = authToken
    And request
      """
      {
        "customer": {
          "subscriberId": "VTAL001"
        },
        "appointment": {
          "id": "SA-562403",
          "confirmation": true
        }
      }
      """
    When method POST
    Then status 200
    And match response ==
      """
      {
        "control": {
          "type": "S",
          "code": "200",
          "message": "OK"
        }
      }
      """

  Scenario: Bad Request
    Given path '/appointmentConfirmation'
    And header Authorization = authToken
    And request
      """
      {
        "invalid": "request"
      }
      """
    When method POST
    Then status 400
    And match response ==
      """
      {
        "control": {
          "type": "E",
          "code": "400",
          "message": "Bad Request"
        }
      }
      """

  Scenario: Unauthorized
    Given path '/appointmentConfirmation'
    And request
      """
      {
        "customer": {
          "subscriberId": "VTAL001"
        },
        "appointment": {
          "id": "SA-562403",
          "confirmation": true
        }
      }
      """
    When method POST
    Then status 401
    And match response ==
      """
      {
        "control": {
          "type": "E",
          "code": "401",
          "message": "Unauthorized"
        }
      }
      """

  Scenario: Forbidden - Scope Not Permitted
    Given path '/appointmentConfirmation'
    And header Authorization = authToken
    And request
      """
      {
        "customer": {
          "subscriberId": "VTAL001"
        },
        "appointment": {
          "id": "SA-562403",
          "confirmation": true
        }
      }
      """
    When method POST
    Then status 403
    And match response ==
      """
      {
        "control": {
          "type": "E",
          "code": "403",
          "message": "Forbidden - Scope Not Permitted"
        }
      }
      """

  Scenario: Not Found
    Given path '/appointmentConfirmation'
    And header Authorization = authToken
    And request
      """
      {
        "customer": {
          "subscriberId": "INVALID001"
        },
        "appointment": {
          "id": "SA-999999",
          "confirmation": true
        }
      }
      """
    When method POST
    Then status 404
    And match response ==
      """
      {
        "control": {
          "type": "E",
          "code": "404",
          "message": "Not Found"
        }
      }
      """

  Scenario: Not Acceptable
    Given path '/appointmentConfirmation'
    And header Authorization = authToken
    And header Accept = 'application/xml'
    And request
      """
      {
        "customer": {
          "subscriberId": "VTAL001"
        },
        "appointment": {
          "id": "SA-562403",
          "confirmation": true
        }
      }
      """
    When method POST
    Then status 406
    And match response ==
      """
      {
        "control": {
          "type": "E",
          "code": "406",
          "message": "Not Acceptable"
        }
      }
      """

  Scenario: Too Many Requests - Exceeded Quota
    Given path '/appointmentConfirmation'
    And header Authorization = authToken
    And request
      """
      {
        "customer": {
          "subscriberId": "VTAL001"
        },
        "appointment": {
          "id": "SA-562403",
          "confirmation": true
        }
      }
      """
    When method POST
    Then status 429
    And match response ==
      """
      {
        "control": {
          "type": "E",
          "code": "429",
          "message": "Too Many Requests - Exceeded Quota"
        }
      }
      """

  Scenario: Internal Server Error
    Given path '/appointmentConfirmation'
    And header Authorization = authToken
    And request
      """
      {
        "customer": {
          "subscriberId": "VTAL001"
        },
        "appointment": {
          "id": "SA-562403",
          "confirmation": true
        }
      }
      """
    When method POST
    Then status 500
    And match response ==
      """
      {
        "control": {
          "type": "T",
          "code": "500",
          "message": "Internal Server Error"
        }
      }
      """
