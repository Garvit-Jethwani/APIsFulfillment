# ********RoostGPT********

# Test generated by RoostGPT for test karate-vtal-appointment using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /appointment/{appointmentId}_get for http method type GET 
# RoostTestHash=b69bb60b36
# 
# 

# ********RoostGPT********
Feature: Retrieve Appointment

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario: Retrieve Appointment - Successful
    Given path '/appointment/SA-562403'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 200
    And match response ==
      """
      {
        control: {
          type: 'S',
          code: 200,
          message: 'Ok'
        },
        appointments: {
          id: 'SA-562403',
          lifeCycleStatus: 'Não atribuído',
          occurrences: [
            {
              creationDateTime: '2021-12-07T12:17:20',
              startDate: '2021-10-09T13:00:00',
              finishDate: '2021-10-09T18:00:00',
              reason: 'Teste Vtal CW',
              reasonDetail: 'Teste Vtal CW'
            }
          ]
        }
      }
      """

  Scenario: Retrieve Appointment - Bad Request
    Given path '/appointment/invalid'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 400
    And match response ==
      """
      {
        control: {
          type: 'E',
          code: 400,
          message: 'Bad Request'
        }
      }
      """

  Scenario: Retrieve Appointment - Unauthorized
    Given path '/appointment/SA-562403'
    When method GET
    Then status 401
    And match response ==
      """
      {
        control: {
          type: 'E',
          code: 401,
          message: 'Unauthorized'
        }
      }
      """

  Scenario: Retrieve Appointment - Forbidden
    Given path '/appointment/SA-562403'
    And header Authorization = 'Bearer invalidToken'
    When method GET
    Then status 403
    And match response ==
      """
      {
        control: {
          type: 'E',
          code: 403,
          message: 'Forbidden - Scope Not Permitted'
        }
      }
      """

  Scenario: Retrieve Appointment - Not Found
    Given path '/appointment/SA-999999'
    And header Authorization = 'Bearer ' + authToken
    When method GET
    Then status 404
    And match response ==
      """
      {
        control: {
          type: 'E',
          code: 404,
          message: 'Not Found'
        }
      }
      """

  Scenario: Retrieve Appointment - Not Acceptable
    Given path '/appointment/SA-562403'
    And header Authorization = 'Bearer ' + authToken
    And header Accept = 'application/xml'
    When method GET
    Then status 406
    And match response ==
      """
      {
        control: {
          type: 'E',
          code: 406,
          message: 'Not Acceptable'
        }
      }
      """
