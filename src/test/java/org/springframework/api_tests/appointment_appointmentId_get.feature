# ********RoostGPT********

# Test generated by RoostGPT for test karate-vtal-appointment using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /appointment/{appointmentId}_get for http method type GET 
# RoostTestHash=b69bb60b36
# 
# 

# ********RoostGPT********
Feature: Retrieve Appointment API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * configure headers = { 'Authorization': '#(authToken)' }

  Scenario: Retrieve Appointment - Successful operation
    Given path '/appointment/SA-562403'
    When method GET
    Then status 200
    And match response.control.type == 'S'
    And match response.control.code == 200
    And match response.control.message == 'Ok'
    And match response.appointments.id == 'SA-562403'
    And match response.appointments.lifeCycleStatus == 'Não atribuído'
    And match response.appointments.occurrences[0].creationDateTime == '2021-12-07T12:17:20'
    And match response.appointments.occurrences[0].startDate == '2021-10-09T13:00:00'
    And match response.appointments.occurrences[0].finishDate == '2021-10-09T18:00:00'
    And match response.appointments.occurrences[0].reason == 'Teste Vtal CW'
    And match response.appointments.occurrences[0].reasonDetail == 'Teste Vtal CW'

  Scenario: Retrieve Appointment - Bad Request
    Given path '/appointment/invalid-id'
    When method GET
    Then status 400
    And match response.control.type == 'E'
    And match response.control.code == 400
    And match response.control.message == 'Bad Request'

  Scenario: Retrieve Appointment - Unauthorized
    Given path '/appointment/SA-562403'
    And configure headers = { 'Authorization': 'invalid-token' }
    When method GET
    Then status 401
    And match response.control.type == 'E'
    And match response.control.code == 401
    And match response.control.message == 'Unauthorized'

  Scenario: Retrieve Appointment - Forbidden - Scope Not Permitted
    Given path '/appointment/SA-562403'
    And configure headers = { 'Authorization': 'forbidden-token' }
    When method GET
    Then status 403
    And match response.control.type == 'E'
    And match response.control.code == 403
    And match response.control.message == 'Forbidden - Scope Not Permitted'

  Scenario: Retrieve Appointment - Not Found
    Given path '/appointment/non-existent-id'
    When method GET
    Then status 404
    And match response.control.type == 'E'
    And match response.control.code == 404
    And match response.control.message == 'Not Found'

  Scenario: Retrieve Appointment - Not Acceptable
    Given path '/appointment/SA-562403'
    And header Accept = 'application/xml'
    When method GET
    Then status 406
    And match response.control.type == 'E'
    And match response.control.code == 406
    And match response.control.message == 'Not Acceptable'

  Scenario: Retrieve Appointment - Precondition Failed
    Given path '/appointment/SA-562403'
    And header If-Match = 'invalid-etag'
    When method GET
    Then status 412
    And match response.control.type == 'E'
    And match response.control.code == 412
    And match response.control.message == 'Precondition Failed'

  Scenario: Retrieve Appointment - Too Many Requests - Exceeded Quota
    Given path '/appointment/SA-562403'
    When method GET
    Then status 429
    And match response.control.type == 'E'
    And match response.control.code == 429
    And match response.control.message == 'Too Many Requests - Exceeded Quota'

  Scenario: Retrieve Appointment - Internal Server Error
    Given path '/appointment/SA-562403'
    When method GET
    Then status 500
    And match response.control.type == 'T'
    And match response.control.code == 500
    And match response.control.message == 'Internal Server Error'

  Scenario: Retrieve Appointment - Service Unavailable
    Given path '/appointment/SA-562403'
    When method GET
    Then status 503
    And match response.control.type == 'T'
    And match response.control.code == 503
    And match response.control.message == 'Service Unavailable'

  Scenario: Retrieve Appointment - Gateway Timeout
    Given path '/appointment/SA-562403'
    When method GET
    Then status 504
    And match response.control.type == 'T'
    And match response.control.code == 504
    And match response.control.message == 'Gateway Timeout'
